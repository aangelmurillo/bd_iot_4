CREATE DATABASE IF NOT EXISTS iHelmet CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

USE iHelmet;

CREATE TABLE IF NOT EXISTS ROLES (
    rol_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    rol VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS ADDRESS (
    address_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    calle VARCHAR(255) NOT NULL,
    num_exterior VARCHAR(20) NOT NULL,
    num_interior VARCHAR(20) NOT NULL,
    colonia VARCHAR(255) NOT NULL,
    cp VARCHAR(10) NOT NULL,
    municipio VARCHAR(40) NOT NULL,
    estado VARCHAR(40) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS CASCOS (
    casco_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    casco_num_serie VARCHAR(30) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS NOTIFICACIONES (
    notificacion_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    nombre_sensor VARCHAR(50) NOT NULL,
    advertencia VARCHAR(255) NOT NULL,
    casco_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP,
    FOREIGN KEY (casco_id) REFERENCES CASCOS(casco_id)
);

CREATE TABLE IF NOT EXISTS PERSONAS (
    persona_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    nombre VARCHAR(40) NOT NULL,
    apellido_pa VARCHAR(40) NOT NULL,
    apellido_ma VARCHAR(40),
    curp VARCHAR(18) UNIQUE NOT NULL,
    nss VARCHAR(15) UNIQUE NOT NULL,
    rfc VARCHAR(14) UNIQUE NOT NULL,
    fecha_nacimiento DATE NOT NULL,
    telefono VARCHAR(30) NOT NULL UNIQUE,
    telefono_emergencia VARCHAR(15) NOT NULL,
    id_address INT NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP,
    FOREIGN KEY (id_address) REFERENCES ADDRESS(address_id)
);

CREATE TABLE IF NOT EXISTS USUARIOS (
    usuario_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    usuario_correo VARCHAR(255) NOT NULL UNIQUE,
    usuario_contrasena VARCHAR(255) NOT NULL,
    usuario_nombre VARCHAR(20) NOT NULL UNIQUE,
    rol_id INT NOT NULL,
    persona_id INT NOT NULL UNIQUE,
    casco_id INT NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP,
    FOREIGN KEY (rol_id) REFERENCES ROLES(rol_id),
    FOREIGN KEY (persona_id) REFERENCES PERSONAS(persona_id),
    FOREIGN KEY (casco_id) REFERENCES CASCOS(casco_id)
);

CREATE TABLE IF NOT EXISTS SENSOR_GPS (
    sensor_gps_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    sensor_gps_coordenadas VARCHAR(255),
    sensor_gps_altura DECIMAL(10,2),
    casco_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP,
    FOREIGN KEY (casco_id) REFERENCES CASCOS(casco_id)
);

CREATE TABLE IF NOT EXISTS SENSOR_MICROFONO (
    sensor_microfono_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    sensor_microfono_audio VARCHAR(255),
    usuario_id INT NOT NULL,
    casco_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES USUARIOS(usuario_id),
    FOREIGN KEY (casco_id) REFERENCES CASCOS(casco_id)
);
