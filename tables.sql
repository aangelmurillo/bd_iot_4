DROP DATABASE IF EXISTS ihelmet;
CREATE DATABASE IF NOT EXISTS ihelmet CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

USE ihelmet;

CREATE TABLE IF NOT EXISTS roles (
    rol_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    rol_name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS addresses (
    address_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    street VARCHAR(70) NOT NULL,
    exterior_number VARCHAR(5) NOT NULL,
    interior_number VARCHAR(5),
    neighborhood VARCHAR(150) NOT NULL,
    zip_code VARCHAR(10) NOT NULL,
    city VARCHAR(40) NOT NULL,
    state VARCHAR(40) NOT NULL,
    country VARCHAR(40) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS helmets (
    helmet_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    helmet_serial_number VARCHAR(30) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS notifications (
    notification_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    sensor_name VARCHAR(50) NOT NULL,
    warning_message VARCHAR(255) NOT NULL,
    helmet_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP,
    FOREIGN KEY (helmet_id) REFERENCES helmets(helmet_id)
);

CREATE TABLE IF NOT EXISTS people (
    person_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    first_name VARCHAR(40) NOT NULL,
    last_name VARCHAR(40) NOT NULL,
    second_last_name VARCHAR(40),
    curp VARCHAR(18) UNIQUE NOT NULL,
    nss VARCHAR(15) UNIQUE NOT NULL,
    rfc VARCHAR(14) UNIQUE NOT NULL,
    date_of_birth DATE NOT NULL,
    phone_number VARCHAR(30) NOT NULL UNIQUE,
    emergency_phone_number VARCHAR(30) NOT NULL,
    address_id INT NOT NULL UNIQUE,
    gender enum('H', 'M') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP,
    FOREIGN KEY (address_id) REFERENCES addresses(address_id)
);

CREATE TABLE IF NOT EXISTS users (
    user_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    user_email VARCHAR(100) NOT NULL UNIQUE,
    user_password VARCHAR(255) NOT NULL,
    user_name VARCHAR(20) NOT NULL UNIQUE,
    role_id INT NOT NULL,
    person_id INT NOT NULL UNIQUE,
    helmet_id INT NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP,
    FOREIGN KEY (role_id) REFERENCES roles(rol_id),
    FOREIGN KEY (person_id) REFERENCES people(person_id),
    FOREIGN KEY (helmet_id) REFERENCES helmets(helmet_id)
);

CREATE TABLE IF NOT EXISTS gps_sensors (
    gps_sensor_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    gps_coordinates VARCHAR(255),
    gps_altitude DECIMAL(10,2),
    helmet_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP,
    FOREIGN KEY (helmet_id) REFERENCES helmets(helmet_id)
);

CREATE TABLE IF NOT EXISTS microphone_sensors (
    microphone_sensor_id INT AUTO_INCREMENT PRIMARY KEY UNIQUE NOT NULL,
    microphone_audio VARCHAR(255),
    user_id INT NOT NULL,
    helmet_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deleted_at TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (helmet_id) REFERENCES helmets(helmet_id)
);
